
name: Release

on:
  push:
    branches:
      - master

jobs:
  get-metadata:
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.get-metadata.outputs.name }}
      version: ${{ steps.get-metadata.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - id: get-metadata
        uses: nikita-volkov/extract-metadata-from-cabal@v1.0.0
      - id: check-tag
        uses: mukunku/tag-exists-action@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag: v${{ steps.get-metadata.outputs.version }}
      - name: Fail if tag exists
        run: |
          if [ ${{ steps.check-tag.outputs.exists }} == true ]
          then
            echo "Tag v${{ steps.get-metadata.outputs.version }} already exists"
            exit 1
          fi

  build-linux-artifact:
    runs-on: ubuntu-latest
    needs:
      - get-metadata
    env:
      FILENAME: ${{ needs.get-metadata.outputs.name }}-v${{ needs.get-metadata.outputs.version }}-linux-x64.tar.xz
    outputs:
      filename: ${{env.FILENAME}}
    steps:
      - uses: actions/checkout@v3
      - id: setup-haskell
        uses: haskell/actions/setup@v2
        with:
          enable-stack: true
          stack-version: 2.7.5
          stack-no-global: true
      - uses: actions/cache@v3
        with:
          path: ${{ steps.setup-haskell.outputs.stack-root }}
          key: ${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}-${{ hashFiles('**.cabal') }}
          restore-keys: ${{ runner.os }}-
      - run: stack build --local-bin-path artifact --copy-bins
      - run: tar cJvf artifact/"${{env.FILENAME}}" -C artifact pgn
      - uses: actions/upload-artifact@v3
        with:
          name: linux-x64
          path: artifact/${{env.FILENAME}}
          if-no-files-found: error

  build-macos-artifact:
    runs-on: macos-latest
    needs:
      - get-metadata
    env:
      ARTIFACT: artifact/${{ needs.get-metadata.outputs.name }}-v${{ needs.get-metadata.outputs.version }}-macos-x64.tar.xz
    steps:
      - uses: actions/checkout@v3
      - id: setup-haskell
        uses: haskell/actions/setup@v2
        with:
          enable-stack: true
          stack-version: 2.7.5
          stack-no-global: true
      - uses: actions/cache@v3
        with:
          path: ${{ steps.setup-haskell.outputs.stack-root }}
          key: ${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}-${{ hashFiles('**.cabal') }}
          restore-keys: ${{ runner.os }}-
      - run: stack build --local-bin-path artifact --copy-bins
      - run: tar cJvf "${{env.ARTIFACT}}" -C artifact pgn
      - uses: actions/upload-artifact@v3
        with:
          name: macos-x64
          path: ${{env.ARTIFACT}}
          if-no-files-found: error
  
  build-windows-artifact:
    runs-on: windows-latest
    needs:
      - get-metadata
    env:
      ARTIFACT_NAME: ${{ needs.get-metadata.outputs.name }}-v${{ needs.get-metadata.outputs.version }}-windows-x64.zip
    steps:
      - uses: actions/checkout@v3
      - id: setup-haskell
        uses: haskell/actions/setup@v2
        with:
          enable-stack: true
          stack-version: 2.7.5
          stack-no-global: true
      - uses: actions/cache@v3
        with:
          path: |
            ${{ steps.setup-haskell.outputs.stack-root }}
            ~\AppData\Roaming\stack
            ~\AppData\Local\Programs\stack
          key: ${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}-${{ hashFiles('**.cabal') }}
          restore-keys: ${{ runner.os }}-
      - run: stack build --local-bin-path artifact --copy-bins
      - uses: thedoctor0/zip-release@0.6.2
        with:
          type: zip
          filename: ${{env.ARTIFACT_NAME}}
          directory: artifact
          path: pgn.exe
      - uses: actions/upload-artifact@v3
        with:
          name: windows-x64
          path: artifact/${{env.ARTIFACT_NAME}}
          if-no-files-found: error

  test-e2e:
    runs-on: ubuntu-latest
    needs:
      - build-linux-artifact
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: linux-x64

      - run: |
          tar -xf ${{needs.build-linux-artifact.outputs.filename}}
          mv pgn /usr/local/bin

      - uses: actions/checkout@v3
        with:
          repository: pgenie-io/demo
          ref: 5af33c319fc5ad20a5617a88a60c539f1171d9cb

      - run: pgn

  release:
    needs:
      - get-metadata
      - build-linux-artifact
      - build-macos-artifact
      - build-windows-artifact
      - test-e2e
    runs-on: ubuntu-latest
    env:
      DRAFT: false
      PRERELEASE: false
      TAG: v${{ needs.get-metadata.outputs.version }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: linux-x64
          path: artifact
      - uses: actions/download-artifact@v2
        with:
          name: macos-x64
          path: artifact
      - uses: actions/download-artifact@v2
        with:
          name: windows-x64
          path: artifact
      - id: tag-and-release
        uses: ncipollo/release-action@v1.10.0
        with:
          tag: ${{ env.TAG }}
          artifacts: "artifact/*"
          allowUpdates: ${{env.DRAFT}}
          draft: ${{env.DRAFT}}
          prerelease: ${{env.PRERELEASE}}
          commit: ${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifactErrorsFailBuild: true
